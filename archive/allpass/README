#################################################################################
#File Name: README 
#Last Modification Date:        %G%     %U%
#Current Version: %M%   %I%
#File Creation Date: Wed Mar  2 09:29:57 1994 
#Author: Markus Lang  <lang@jazz.rice.edu>  
#
#Copyright: All software, documentation, and related files in this distribution
#           are Copyright (c) 1992  LNT, University of Erlangen
#           Nuernberg, FRG 
#
#Permission is granted for use and non-profit distribution providing that this
#notice be clearly maintained. The right to distribute any portion for profit
#or as part of any commercial product is specifically reserved for the author.
#
#Change History:
#
#################################################################################

DESCRIPOTION:
This software package is for allpass filter design according to different 
methods, error norms and applications. There are three main routines:
apdesz.m, apparz.m, and ap_lgs_z.m.

The program apdesz.m uses a nonlinear Remez algorithm. It is suited for 
weighted phase approximation and equalization. It is typically very fast 
(some seconds on a SPARC 10) and robust. An example for the usage 
(equalization of an elliptical filter) can be found in exampl3.m. 

The program apparz uses the same basic algorithm as apdesz.m. It is suited 
for the design of allpass filters for the parallel allpass structure. It 
is typically slower than apdesz.m since it needs a considerably larger 
amount of iterations. Arbitrary frequency dependend tolerances for the 
resulting magnitude response can be given. An example for the usage 
(allpass + delay) can be found in exampl1.m

The program ap_lgs_z.m solves an iteratively reweighted system
of overdetermined linear equations according to the l_2 or the 
l_oo norm. It can be used for equalization, approximation, and parallel 
allpass filter design. The algorithm for l_2 solution is fast (comparable
to apdesz.m). The algorithm for the l_oo solution is much slower. In the 
latter case the program apdesz.m or apparz.m should be preferred. Examples 
for the usage can be found in exampl2.m (allpass + delay) and in exampl3 
(equalization of an elliptical filter).

REFERENCES:
  Markus Lang, Timo Laakso: "Simple and Robust Design of Allpass
    Filters Using Least-Squares Phase Error Criterion", IEEE CASII, vol 41,
    no. 1, pp 40--48 

  Markus Lang: "Optimal Weighted Phase Equalization according to the 
    L_oo Norm", EURASIP Signal Processing, vol. 27 (1992), pp87--98. 

  Markus Lang: "Phase Approximation by Allpass Filters" (in german). PhD
    thesis. Erlangen, Germany, 1993. 

EMAIL: 
For bug reports and questions send email to lang@jazz.rice.edu

CONDITIONS FOR USE:
        This software is Copyright (c) 1992  LNT, University of Erlangen
        Nuernberg, FRG 
	You have the right to use, free of charge, with the following terms 
        and conditions:

      (1) You can redistribute this software in source form.  If you
            redistribute this software in compiled form you will include
            the source code.
      (2) You can distribute your own applications that link this software
            if you include the source code for this software.
      (3) You own full rights to any output files you generate with this
            software.
      (4) You can make modifications to this software and use it for
            in-house use only.  Under no circumstances can modified software
            be redistributed.
      (5) If you make any modifications to this software you will send
            the changes by email to lang@jazz.rice.edu
      (6) The LNT, at University of Erlangen Nuernberg, FRG, shall be 
            credited should this software be used in in any form or 
            written about in any publication.
      (7) This software is provided "as is", without warranty by University 
            of Erlangen Nuernberg. In no event shall the University of 
            Erlangen Nuernberg be liable for any loss or for any indirect, 
            special, punitive, exemplary, incidental, or consequential 
            damages arising from the use, possession or performance of 
            this software.



