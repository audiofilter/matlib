function v3dtool(gf)
%V3DTOOL View three-dimensional plots tool.
%       V3DTOOL(H) attaches itself to the 3D axis in the figure
%       window specified by the handle H. If H is omitted, the
%       current figure is used.
%
%       V3DTOOL takes the drudgery out of typing the view command
%       over and over to find the best orientation for a three
%       dimensional plot. It can be used in figure windows which
%       have a single 3D axes. Upon its use, V3DTOOL repositions
%       the axes, leaving room for the following controls:
%
%           o A scroll bar controlling the azimuth.
%           o A scroll bar controlling the elevation.
%           o "Azimuth" and "Elevate" edit boxes to display
%             the current values of the associated scroll bars
%             or allow the desire azimuth or elevation to be
%             entered directly.
%           o A "Q"uit push button which removes the uicontrols
%             and restores the original position leaving the
%             final axes orientation.
%
%       Notes: Only one V3DTOOL per figure window is allowed.
%              Only one axis can be present in the figure window.
%
%       See also ZOOMTOOL

%       Dennis W. Brown 1-10-94
%       Copyright (c) 1994 by Dennis W. Brown
%       May be freely distributed.
%       Not for use in commercial products.

% check and see if progtools are installed
if exist('findpush') ~= 2,
    error('v3dtool: Requires D. W. Brown''s programming toolbox...');
end;

% check input
if nargin > 1,
    error('v3dtool: Invalid number of input arguments...');
end;

% get current axis if none given
if nargin ~= 1,
	gf = gcf;
end;

% check for only one axes
if cntaxes(gf) ~= 1,
    error('v3dtool: Only one axes per figure allowed...');
end;

% check if already running in window
if finduitx(gf,'Elevate'),
    error('v3dtool: Already running in figure window...');
end;

% get handle figure axes
ga = gca;

% check axis
if isempty(get(ga,'ZTickLabels')),
    error('v3dtool: Axes is not a 3D axes...');
end;

% don't allow any other plots until quit is pushed (so the 
%   controls are removed from the window)
set(gf,'NextPlot','new');

% get current azimuth and elevation
v = get(ga,'View');

% get the axes limits and save it away
p = get(ga,'Position');
set(ga,'UserData',p);

% change axis size to fit controls in window
p = [.15 .15 .7 .75];
set(ga,'position',p);

% redraw command
redraw = 'view(az,el);';

% get slider values
getslider = [...
    'az = get(findslid(gcf,''azimuth''),''Value'');'...
	'el = get(findslid(gcf,''elevation''),''Value'');'...
	];

% get slid edit box values
getsledit = [...
    'az = str2num(get(findedit(gcf,''azimuth''),''String''));'...
	'el = str2num(get(findedit(gcf,''elevation''),''String''));'...
    ];

% set slider values
setslider = [...
	'set(findslid(gcf,''azimuth''),''Value'',az);'...
	'set(findslid(gcf,''elevation''),''Value'',el);'...
	];

% set slider edit boxes
setsledit = [...
	'set(findedit(gcf,''azimuth''),''String'',num2str(az));'...
	'set(findedit(gcf,''elevation''),''String'',num2str(el));'...
    ];

% check edit box values, if in error, reset to present values,
%   do not redraw, otherwise redraw
chkedit = [...
    'if (abs(az) > 90) | (el < 0) | (el > 90),'...
        getslider ...
        setsledit ...
    'else,' ...
        getsledit ...
        setslider ...
        redraw ...
    'end;'...
    ];

% quit callback
v3dquit = [ 'gf = gcf; ga = gca;' ...
    'delete(findedit(gf,''azimuth''));' ...
    'delete(findslid(gf,''azimuth''));' ...
    'delete(finduitx(gf,''Azimuth''));' ...
    'delete(findedit(gf,''elevation''));' ...
    'delete(findslid(gf,''elevation''));' ...
    'delete(finduitx(gf,''Elevate''));' ...
    'delete(findpush(gf,''Q''));' ...
    'delete(finduitx(gf,''-90''));' ...
    'delete(finduitx(gf,''90''));' ...
    'delete(finduitx(gf,''90''));' ...
    'delete(finduitx(gf,''0''));' ...
    'set(gca,''Position'',get(gca,''Userdata''));' ...
    'set(gcf,''NextPlot'',''replace'');' ...
    ];

% slider callback
slidecall = [getslider setsledit redraw];

% edit callback
sleditcall = [getsledit chkedit];

%slider position
sposa = [.1 0 .8 .05];      % azimuth
spose = [.95 .1 .05 .8];    % elevation

% make slider contols
h = uicontrol(gf,'Style','slider','Units','Normal',...
	'Position',sposa,'String','azimuth',...
	'UserData',ga,'Max',90,'Min',-90,'Value',v(1),...
	'Callback',slidecall);
set(h,'Value',v(1));
h =uicontrol(gf,'Style','Slider','Units','Normal',...
	'Position',spose,'String','elevation',...
	'UserData',ga,'Max',90,'Min',0,...
	'Callback',slidecall);
set(h,'Value',v(2));

% label sliders
cback = get(gf,'Color');
cfore = get(ga,'XColor');
uicontrol(gf,'Style','Text','Units','Normal',...
    'Position',[sposa(1)-0.05 sposa(2) 0.045 sposa(4)]',...
    'BackGround',cback,'ForeGround',cfore,...
    'String','-90','Horiz','left');
uicontrol(gf,'Style','Text','Units','Normal',...
    'Position',[sposa(1)+sposa(3)+0.005 sposa(2) 0.05 sposa(4)]',...
    'BackGround',cback,'ForeGround',cfore,...
    'String','90','Horiz','left');
uicontrol(gf,'Style','Text','Units','Normal',...
    'Position',[spose(1) spose(2)-0.05 spose(3) 0.05]',...
    'BackGround',cback,'ForeGround',cfore,...
    'String','0','Horiz','center');
uicontrol(gf,'Style','Text','Units','Normal',...
    'Position',[spose(1) spose(2)+spose(4) spose(3) 0.05]',...
    'BackGround',cback,'ForeGround',cfore,...
    'String','90','Horiz','center');

% edit boxes for setting azimuth and elevation
cback = 'blue';
uicontrol(gf,'Style','edit','Units','normal','UserData','azimuth',...
    'Position',[sposa(1) sposa(4) 0.1 0.05],...
    'BackGround',cback,'ForeGround',cfore,...
    'String',num2str(v(1)),'Horiz','right',...
    'CallBack',sleditcall);
uicontrol(gf,'Style','edit','Units','normal','UserData','elevation',...
    'Position',[spose(1)-0.1 spose(2)+spose(4)-0.05 0.1 0.05],...
    'BackGround',cback,'ForeGround',cfore,...
    'String',num2str(v(2)),'Horiz','right',...
    'CallBack',sleditcall);

% labels for text objects
cback = get(gf,'Color');
p = get(findedit(gf,'azimuth'),'Position');
uicontrol(gf,'Style','text','Units','normal','UserData','azimuth',...
    'Position',[p(1) p(2)+p(4) p(3) p(4)],...
    'BackGround',cback,'ForeGround',cfore,...
    'String','Azimuth','Horiz','center');
p = get(findedit(gf,'elevation'),'Position');
uicontrol(gf,'Style','text','Units','normal','UserData','elevation',...
    'Position',[p(1) p(2)+p(4) p(3) p(4)],...
    'BackGround',cback,'ForeGround',cfore,...
    'String','Elevate','Horiz','center');

% quit pushbutton
uicontrol(gf,'Style','push','Units','normal',...
    'Position',[0.95 0 0.05 0.05],...
    'ForeGround',cfore,'String','Q','Horiz','center',...
    'CallBack',v3dquit);

